#version: '3.8'
# launch with: after kafka and zookeeper (main docker compose)

services:
  delivery-db:
    image: postgres:14-alpine
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - delivery-data:/var/lib/postgresql/data
      - ./src/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - kafka-network
      - delivery-network

  delivery-service:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-3002}:${PORT:-3002}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - KAFKA_BROKERS=${KAFKA_BROKERS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      delivery-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - kafka-network
      - delivery-network

volumes:
  delivery-data:

networks:
  kafka-network:
    external: true
  delivery-network:       # Добавляем локальную сеть
    driver: bridge